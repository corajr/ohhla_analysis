/*! EmberCrossfilter by Adam Timberlake created on 2013-06-11 */
window.EmberCrossfilter=Ember.Mixin.create({_crossfilter:null,allowDebugging:!1,init:function(){this._super(),Ember.addObserver(this,"content.length",this,"_createCrossfilter"),this._createCrossfilter()},isActiveFilter:function(a,b){var c=this.filterMap[a];if("filterInArray"===c.method){var d=c._mapProperties[b];return"or"===c.boolean?Boolean(c.value&d):-1!==$.inArray(d,c.value)}return Ember.get(c,"active")===!0},addFilter:function(a,b){var c=this.filterMap[a];"filterInArray"!==c.method?(c.value=b,Ember.set(c,"active",!0)):(c.active.pushObject(b),c.active=c.active.uniq(),"or"===c.boolean?c.value|=c._mapProperties[b]:(Ember.isArray(c.value)||(c.value=[]),c.value.push(c._mapProperties[b]))),this._updateContent(c)},removeFilter:function(a,b){var c=this.filterMap[a];if("filterInArray"!==c.method&&(c.value=!1,Ember.set(c,"active",!1)),"filterInArray"===c.method)if(c.active.removeObject(b),c.active=c.active.uniq(),"or"===c.boolean)c.value&c._mapProperties[b]&&(c.value^=c._mapProperties[b]);else{var d=c.value.indexOf(c._mapProperties[b]);c.value.splice(d,1)}this._updateContent(c)},clearAllFilters:function(){var a=(new Date).getTime();for(var b in this.filterMap)if(this.filterMap.hasOwnProperty(b)){var c=this.filterMap[b],d=this["_dimension%@".fmt(c.dimension.capitalize())];d.filterAll(),Ember.set(c,"active",!1),c.value=null,"filterInArray"===c.method&&(c.value=0)}this._applyContentChanges(),this.allowDebugging&&Ember.debug("Clearing All: %@ millisecond(s)".fmt((new Date).getTime()-a))},sortContent:function(a,b){var c=this._sortedContent(Ember.get(this,"content"),a,b),d=(new Date).getTime();Ember.set(this,"content",c),Ember.assert("In order to sort you must have a `sort` object defined.",!!Ember.get(this,"sort")),Ember.assert("You must define `sortProperty` in your `sort` object.",!!Ember.get(this,"sort.sortProperty")),Ember.set(this,"sort.sortProperty",a),Ember.set(this,"sort.isAscending",b),this.notifyPropertyChange("content"),this.allowDebugging&&Ember.debug("Sorting: %@ millisecond(s)".fmt((new Date).getTime()-d))},top:function(a,b){return this._topBottom(a,b,"top")},bottom:function(a,b){return this._topBottom(a,b,"bottom")},_topBottom:function(a,b,c){Ember.assert('Dimension with key "%@" is not defined.'.fmt(a),!!this.filterMap[a]);var d=this.filterMap[a],e="_dimension%@".fmt(d.dimension.capitalize());return this[e][c](b||1)[0]},_createCrossfilter:function(){Ember.assert("Controller implements EmberCrossfilter but `filterMap` has not been specified.",!!this.filterMap);var a=Ember.get(this,"content"),b=!!this._crossfilter,c=!a.length;if(c||b)return!1;if(Ember.removeObserver(this,"content.length",this,"_createCrossfilter"),this._crossfilter=crossfilter(a),this._createDimensions(),Ember.get(this,"sort.sortProperty")){var d=Ember.get(this,"sort.sortProperty"),e=Ember.get(this,"sort.isAscending");Ember.set(this,"content",this._sortedContent(a,d,e))}return!0},_updateContent:function(a){var b=(new Date).getTime(),c=this["_dimension%@".fmt(a.dimension.capitalize())];switch(a.method){case"filterInArray":this._setFilterInArray(a,c);break;case"filterRangeMin":this._setFilterRangeMin(a,c);break;case"filterRangeMax":this._setFilterRangeMax(a,c);break;case"filterFunction":this._setFilterFunction(a,c);break;default:c[a.method](a.value)}this._applyContentChanges(),this.allowDebugging&&Ember.debug("Filtering: %@ millisecond(s)".fmt((new Date).getTime()-b))},_applyContentChanges:function(){var a=Ember.get(this,"_dimensionId"),b=a.filterAll().top(1/0);Ember.get(this,"sort.sortProperty")&&(b=this._sortedContent(b,Ember.get(this,"sort.sortProperty"),Ember.get(this,"sort.isAscending"))),Ember.set(this,"content",b)},_createDimensions:function(){var a=function(a,b){this[a]||Object.defineProperty(this,a,{enumerable:!1,configurable:!1,writable:!1,value:this._crossfilter.dimension(function(a){return a[b]})})};a.apply(this,["_dimensionId","id"]);for(var b in this.filterMap)if(this.filterMap.hasOwnProperty(b)){this.filterMap[b].name=b,b=this.filterMap[b],b.value=null,Ember.set(b,"active",!1),"filterInArray"===b.method&&(Ember.set(b,"active",[]),this._createFilterInArray(b));var c="_dimension%@".fmt(b.dimension.capitalize());a.apply(this,[c,b.property])}},_createFilterInArray:function(a){var b=(new Date).getTime(),c=this.mapProperty(a.property),d=[].concat.apply([],c).uniq(),e=a.property,f={},g=0,h=0;for(var i in d)if(d.hasOwnProperty(i)){var j=1<<h++;g^=j,f[d[i]]=j}a.property="__ecBitwise%@".fmt(a.name.capitalize()),a.value=0,a._totalBitwise=g,a._mapProperties=f;for(var k=Ember.get(this,"content"),l=0,m=Ember.get(this,"content.length");m>=l;l++){var n=k.objectAt(l);if(n){for(var o=Ember.get(n,e),p=0,q=0,r=o.length;r>=q;q++){var s=o[q];s&&(p^=a._mapProperties[s])}Object.defineProperty(n,a.property,{enumerable:!1,configurable:!0,writable:!1,value:p})}}this.allowDebugging&&Ember.debug("Properties: %@ millisecond(s)".fmt((new Date).getTime()-b))},_sortedContent:function(a,b,c){var d=crossfilter.quicksort.by(function(a){return a[b]}),e=d(a,0,a.length);return c||(e=e.reverse()),e},_setFilterInArray:function(a,b){return"and"===a.boolean?(b.filterFunction(function(b){if(0===a.value)return!0;var c=!0;return a.value.forEach(function(a){return 0===(b&a)?(c=!1,!1):void 0}),c}),void 0):(b.filterFunction(function(b){return 0===a.value?!0:a.value&b}),void 0)},_setFilterFunction:function(a,b){if(a.value===!1)return b.filterAll(),void 0;var c="_apply%@".fmt(a.name.capitalize());Ember.assert("Crossfilter `filterFunction` expects a callback named `%@`.".fmt(c),!!Ember.canInvoke(this,c));var d=this;b.filterFunction(function(a){return d[c].apply(d,[a])})},_setFilterRangeMin:function(a,b){var c=a.name.replace("min","max");Ember.assert("You must specify define the `max` dimension for %@".fmt(a.name),!!this.filterMap[c]);var d=this.filterMap[c].value;b.filterRange([a.value||-1/0,d||1/0])},_setFilterRangeMax:function(a,b){var c=a.name.replace("max","min");Ember.assert("You must specify define the `min` dimension for %@".fmt(a.name),!!this.filterMap[c]);var d=this.filterMap[c].value;b.filterRange([d||-1/0,a.value||1/0])}});